q2.1 1. BA一直被误认为是比较慢的，因为没有考虑到问题的结构和稀疏性。直接对H HH求逆来计算增量方程，会消耗很多计算资源，也就显得比较慢。实际上，由于H HH具有稀疏结构，是可以使用加速技巧进行求解的。而经过处理的BA，通常比其他新的方法更快，更有效。
     2. 参数：
        3D points (x,y,z)
        6D poses R,t
        intrinsics fx, fy, cx, cy

        Pose: 变换矩阵,欧拉角, 四元数
        欧拉角的优点是非常直观，缺点是容易产生万向锁问题
        变换矩阵的优点是描述方便，缺点是产生的参数过多，需要16个参数来描述变换过程
        四元数的优点是计算方便，没有万向锁问题，缺点是理解起来比较困难、不直观

        Point: 三维坐标点, 逆深度
        三维坐标点优点是比较简单直观，缺点是无法描述无限远的点
        逆深度优点在于能够建模无穷远点；在实际应用中，逆深度也具有更好的数值稳定性
     3. Intensity-based方法就是直接法的Bundle Adjustment;
        文中提的Network Structure对应现在应用比较广泛的图优化方式;
        H的稀疏性可以实现BA实时，在07年的PTAM上实现。
   
 q2.2: See bal
 
 q3.1 1. error = I_ref(π(pi)) - I_cur(π(T_cr * pi))
      2. 关联两个优化变量，分别是位姿和路标点。也就是相机的李代数和三位空间坐标点。
      3. 误差相对于李代数的雅克比：
         Ji = ∂e/∂δɛ = - ∂I_cur(π(T_cr * pi))/∂δɛ = -∂I_cur/∂u *  ∂u/∂(T_cr*p) * ∂(T_cr*p)/∂δɛ
    
         ∂I_cur/∂u = [I_cur(u+1,v) - I_cur(u-1,v), I_cur(u,v+1) - T_cur(u,v-1), 0]
        
         设T_cr*p = [X, Y, Z]^T
         ∂u/∂(T_cr*p) = [fx/Z 0    -fx*X/Z^2]
                        [0    fy/Z -fy*Y/Z^2]

         ∂(T_cr*p)/∂δɛ = [I, -(T_cr*p)^]
        
         Ji = - [I_cur(u+1,v)-I_cur(u-1,v), I_cur(u,v+1)-I_cur(u,v-1)] * [fx/Z 0    -fx*X/Z^2] * [I, -(T_cr*p)^]
                       						    [0    fy/Z -fy*Y/Z^2] 

         误差相对于3D坐标点的雅克比：
         Ji = ∂e/∂pi = - ∂I_cur/∂u * ∂u/∂(T_cr*p) * ∂(T_cr*p)/∂pi 
                     = - [I_cur(u+1,v)-I_cur(u-1,v), I_cur(u,v+1)-I_cur(u,v-1)] * [fx/Z 0    -fx*X/Z^2] * T_cr
                                                                                  [0    fy/Z -fy*Y/Z^2] 
     
 q3.2 1. 可以使用逆深度的方法来参数化每个点，这种方式可以表示无限远点。
      2. 4*4的patch应该是一个比较适中的大小，patch过大会导致计算量大，过小则会导致鲁棒性不强。
      3. 最大的不同就是误差的计算不同，直接法计算的是光度误差，特征点法计算的是重投影误差。
      4. ​ Huber阈值可以使用chi-sqaured的阈值进行设置。
      实现: See directBA
